//
// Generated file, do not edit! Created by opp_msgtool 6.0 from iot.msg.
//

#ifndef __IOT_M_H
#define __IOT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class IotMsg;
/**
 * Class generated from <tt>iot.msg:2</tt> by opp_msgtool.
 * <pre>
 * message IotMsg
 * {
 *     int sID;
 *     int dID;
 *     int hCount = 0;
 * 
 * 
 * 
 * }
 * </pre>
 */
class IotMsg : public ::omnetpp::cMessage
{
  protected:
    int sID = 0;
    int dID = 0;
    int hCount = 0;

  private:
    void copy(const IotMsg& other);

  protected:
    bool operator==(const IotMsg&) = delete;

  public:
    IotMsg(const char *name=nullptr, short kind=0);
    IotMsg(const IotMsg& other);
    virtual ~IotMsg();
    IotMsg& operator=(const IotMsg& other);
    virtual IotMsg *dup() const override {return new IotMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSID() const;
    virtual void setSID(int sID);

    virtual int getDID() const;
    virtual void setDID(int dID);

    virtual int getHCount() const;
    virtual void setHCount(int hCount);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const IotMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, IotMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline IotMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<IotMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __IOT_M_H

